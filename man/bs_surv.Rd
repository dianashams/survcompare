% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/base_functions.R
\name{bs_surv}
\alias{bs_surv}
\title{This function calculates time-dependent BrierScore for df_newdata, similar to
https://scikit-survival.readthedocs.io/en/stable/api/generated/sksurv.metrics.brier_score.html#sksurv.metrics.brier_score
https://github.com/sebp/scikit-survival/blob/v0.19.0.post1/sksurv/metrics.py#L524-L644
Uses IPCW (inverse probability of censoring weights), computed with K-M curve,
where events are censored events from train data}
\usage{
bs_surv(
  y_predicted_newdata,
  df_brier_train,
  df_newdata,
  time_points,
  weighted = TRUE
)
}
\arguments{
\item{y_predicted_newdata}{computed event probabilities}

\item{df_brier_train}{train data}

\item{df_newdata}{test data for which brier score is computed}

\item{time_points}{times at which BS calculated}

\item{weighted}{TRUE/FALSE for IPWC to use or not}
}
\value{
vector of BS for each time in time_points
}
\description{
This function calculates time-dependent BrierScore for df_newdata, similar to
https://scikit-survival.readthedocs.io/en/stable/api/generated/sksurv.metrics.brier_score.html#sksurv.metrics.brier_score
https://github.com/sebp/scikit-survival/blob/v0.19.0.post1/sksurv/metrics.py#L524-L644
Uses IPCW (inverse probability of censoring weights), computed with K-M curve,
where events are censored events from train data
}
\examples{
df <- simsurv_nonlinear()
}
